// SWITCH-TO: ../../old/template/tea_manage

$(function(){

    
    //=======================================================
    notify_cur_playpostion=function (cur_play_time){
        Cwhiteboard.play_next( cur_play_time );
    };
   
    get_new_whiteboard=function (obj_drawing_list){
        
        var ret= {
            "obj_drawing_list": obj_drawing_list,

            "get_page" :function ( pageid,show_pageid){
                var me=this;
                var div_id= "drawing_"+ pageid ;
                var page_info=me.draw_page_list[pageid];
                if (!page_info){
                    var tmp_div=$(  "<div  class=\"page_item\"  id=\""+div_id+ "\"/>");
                    if ( show_pageid &&  pageid != show_pageid ) {
                        tmp_div.hide();
                    }
                    
                    obj_drawing_list.append( tmp_div );
                    me.draw_page_list[ pageid]={
                        pageid    :  pageid
                        ,opt_list :  [] 
                        ,draw : SVG(tmp_div[0]).size(me.width, me.height )
                    };
                    page_info=me.draw_page_list[pageid];
                    page_info.draw.attr("viewBox", "0,0,1024,768" );
                    var text = page_info.draw.text(""+pageid+"/"+me.max_pageid );
                    text.attr({
                        x:969, 
                        y:732
                    });
                }

                return page_info;
            },"play_one_svg":function(item_data,show_pageid){
                var me=this;
                if(item_data.svg_id){
                    $("#"+ item_data.svg_id) .show();
                    return;
                }
                var page_info = me.get_page(item_data.pageid,show_pageid);
                var draw      = page_info.draw;
                var opt_args  = item_data.opt_args;
                var id        = "";
                switch( item_data.opt_type  ) {
                case "path":
                    var path = draw.path( opt_args.d );
                    path.fill( opt_args.fill   ).stroke({ width: opt_args["stroke-width"]  }).attr({
                        "stroke":  opt_args.stroke
                    });
                    id=path.id();
                    break;
                case "image":
                    var image=draw.image(opt_args.url,opt_args.width,opt_args.height  );
                    image.attr({ x:  opt_args.x , y:  opt_args.y });
                    id=image.id();
                    break;
                case "eraser":
                    var eraser = draw.path( opt_args.d );
                    eraser.fill( opt_args.fill   ).stroke({ width: opt_args["stroke-width"] , dasharray:opt_args["stroke-dasharray"], color:opt_args["stroke-color"] }).attr({
                        "stroke":  opt_args.stroke
                    });
                    id=eraser.id();
                default:
                    console.log( "ERROR:" +  item_data.opt_type );
                    break;
                }
                item_data.svg_id=id;
            },"init_to_play": function(){
                var me = this;

                me.draw_page_list=[];
                me.play_index=0;
                me.play_pageid=-1;
                me.play_svg=null ;
                me.get_page(1);
                me.show_page(1);
            },"play_next_front":function(  cur_play_time ){
                var me=this;
                var front_flag=false;
                var show_pageid=-1;
                var opt_list=[];
                while ( me.play_index< me.svg_data_list.length  ){
                    var item_data=me.svg_data_list[me.play_index];
                    if (item_data.timestamp <= cur_play_time ){ 
                        console.log(cur_play_time);
                        show_pageid=item_data.pageid;
                        opt_list.push(item_data);
                        me.play_index++;
                        front_flag=true;
                    }else{
                        break;
                    }
                }
                if(show_pageid!=-1){
                    me.show_page(show_pageid);
                    $.each(opt_list,function(i,item_data){
                        me.play_one_svg(item_data ,show_pageid);
                    });
                }
                return front_flag;
            }, "play_next_back" :function (cur_play_time) {
                var me=this;
                var a_show_page_id=-1;
                var opt_list=[];
                while ( me.play_index>0 ){
                    var item_data=me.svg_data_list[me.play_index-1];
                    if (item_data.timestamp > cur_play_time ){ 
                        opt_list.push(item_data);
                        a_show_page_id= item_data.pageid;
                        me.play_index--;
                    }else{
                        break;
                    }
                }

                if(a_show_page_id!=-1){
                    me.show_page(a_show_page_id);
                    $.each(opt_list,function(i,item_data){
                        $("#"+ item_data.svg_id) .hide();
                    });
                }
            }
            
            ,"play_next" :  function( cur_play_time){
                var me=this;
                //前进处理
                var front_flag=me.play_next_front(cur_play_time);
                if (!front_flag){
                    me.play_next_back(cur_play_time);
                }
            }

            ,"show_page":function( pageid ){
                console.log("PAGEID:"+pageid);
                var me=this;
                if ( me.play_pageid != pageid ){
                    var div_id= "drawing_"+ pageid ;
                    me.obj_drawing_list.find("div").hide();
                    me.obj_drawing_list.find("#"+div_id ).show();
                    me.play_pageid=pageid;
                }
            }
            
            ,"loadData":function(  w, h, lession_start_time , xml_file, mp3_file,html_node ){
                var me=this;
                var audio_node=html_node.find("audio" );
                me.svg_data_list=[];
                me.height=h;
                me.width=w;
                me.max_pageid=0;
                me.start_time=lession_start_time ;
                $.get(xml_file,function(xml){   
	                var svg_list =$(xml).find("svg") ;

                    svg_list.each(function(){
                        var item_data={};
                        var item=$(this);
                        item_data.pageid=Math.floor(item.attr("y")/768)+1;
                        if (me.max_pageid <  item_data.pageid ){
                            me.max_pageid =  item_data.pageid ;
                        }

                        item_data.timestamp=item.attr("timestamp")-me.start_time;
                        var opt_item= item.children(":first");
                        item_data.opt_type=$(opt_item)[0].tagName;

                        var stroke_info = opt_item.attr("stroke");
                        if( typeof stroke_info != "undefined" && stroke_info.indexOf("#") == -1){
                            stroke_info = "#" + stroke_info;
                        }
                        var opt_args={};
                        switch( item_data.opt_type  ) {

                        case "path":
                            //<path fill="none" stroke="0bceff" stroke-width="4" d="M458.0 235.5Q458.0 235.5 457.0 237.5M457.0 237.5Q456.0 239.5 456.0 242.5M456.0 242.5Q456.0 245.5 455.5 253.2M455.5 253.2Q455.0 261.0 453.0 273.5M453.0 273.5Q451.0 286.0 447.8 301.0M447.8 301.0Q444.5 316.0 441.2 333.0M441.2 333.0Q438.0 350.0 435.8 367.8M435.8 367.8Q433.5 385.5 433.2 402.5"></path>
                            opt_args={
                                fill    : opt_item.attr("fill")
                                ,stroke : stroke_info
                                ,"stroke-width" : opt_item.attr("stroke-width")
                                ,"d" : opt_item.attr("d")
                                ,"stroke-dasharray" : opt_item.attr("stroke-dasharray")
                                ,"stroke-color" : "FFFFFF"
                            };
                            
                            break;
                        case "image":
                            opt_args={
                                x         : opt_item.attr("x")
                                ,y        : opt_item.attr("y")
                                ,"width"  : opt_item.attr("width")
                                ,"height" : opt_item.attr("height")
                                ,"url"    : opt_item.text()
                            };
                            break;
                        case "eraser":
                            opt_args={
                                fill    : opt_item.attr("fill")
                                ,stroke : stroke_info
                                ,"stroke-width" : opt_item.attr("stroke-width")
                                ,"stroke-dasharray" : opt_item.attr("stroke-dasharray")
                                ,"d" : opt_item.attr("d")
                                ,"stroke-color" : "white"
                            };
                            break;


                        default:
                            console.log( "ERROR:" +  item_data.opt_type );
                            break;

                            
                        }

                        item_data.opt_args=opt_args;
                        
                        me.svg_data_list.push( item_data );
                    });
                    
                    me.init_to_play();

                    //加载mp3
                    audiojs.events.ready(function(){
                        var as = audiojs.createAll({}, audio_node  );
                        //reset width
                        //
                        html_node.find(".audiojs").css("width",""+w+"px" );
                        html_node.find(".scrubber").css("width", (w-174).toString()+"px" );
                        //
                        as[0].load( mp3_file  );

                    });

                    
	            });
            }
        };
        return ret;
    };

    $(".opt-play").on("click", function(){
        var lessonid = $(this).parent().data('lessonid');
        $.ajax({
			type     :"post",
			url      :"/tea_manage/get_lesson_reply",
			dataType :"json",
			data     :{"lessonid":lessonid},
			success  : function(result){
				if(result.ret == 0 ){
                    //加载数据
                    
                    var w=check_in_phone()?329 : 558;
                    var h=w/4*3;

                    var html_node=$(" <div  style=\"text-align:center;\"  > <div id=\"drawing_list\" style=\"width:100%\"  > </div>  <audio preload=\"none\"  > </audio> </div> ");
                    BootstrapDialog.show({
                        title: '课程回放',
                        message : html_node,
                        closable: true, 
                        onhide: function(dialogRef){
                        }
                    }); 

                    Cwhiteboard=get_new_whiteboard(html_node.find("#drawing_list"));


                    //audio_url "http://7tszue.com2.z0.glb.qiniucdn.com/l_217y4y1yaudio.mp3?e=1435135882&token=yPmhHAZNeHlKndKBLvhwV3fw4pzNBVvGNU5ne6Px:PMZEngdMVO4tilZ5OC0P5nTC0fw="
                    //draw_url "http://7tszue.com2.z0.glb.qiniucdn.com/l_217y4y1ydraw.xml?e=1435135882&token=yPmhHAZNeHlKndKBLvhwV3fw4pzNBVvGNU5ne6Px:ZzhOtcnnVkVKd2dZjWYV8OHSqio="
                    //real_begin_time "1434765333"
                    Cwhiteboard.loadData(w , h, result.real_begin_time, result.draw_url, result.audio_url, html_node );
                    /*
                    Cwhiteboard.loadData(w , h, 1434765333,
                                         "http://7tszue.com2.z0.glb.qiniucdn.com/l_217y4y1ydraw.xml?e=1435135882&token=yPmhHAZNeHlKndKBLvhwV3fw4pzNBVvGNU5ne6Px:ZzhOtcnnVkVKd2dZjWYV8OHSqio=" ,
                                         "http://7tszue.com2.z0.glb.qiniucdn.com/l_217y4y1yaudio.mp3?e=1435135882&token=yPmhHAZNeHlKndKBLvhwV3fw4pzNBVvGNU5ne6Px:PMZEngdMVO4tilZ5OC0P5nTC0fw=",
                                         html_node
                                        );
                     */
				}else{
                    BootstrapDialog.alert(result.info);
                }
			}
		});
    });        

    $(".opt-upload").on("click", function(){
        $(this).addClass('current_opt_lesson_record');
        var html_node = $('<div></div>').html(dlg_get_html_by_class('dlg_upload'));

        var lesson_info = new Object();
        lesson_info.lessonid      = $(this).parent().data("lessonid");
        lesson_info.lesson_status = $(this).parents('td').siblings('.lesson_status').find('.status').val();
        lesson_info.work_status   = $(this).parents('td').siblings('.homework_url').find('.status').val();


        html_node.find(".opt-teacher-url").attr('id', 'optid-teacher-url'+lesson_info.lessonid);
        html_node.find(".opt-teacher-url").parent().attr('id', 'optid-teacher-url-parent'+lesson_info.lessonid);
        html_node.find(".opt-student-url").attr('id', 'optid-student-url'+lesson_info.lessonid);
        html_node.find(".opt-student-url").parent().attr('id', 'optid-student-url-parent'+lesson_info.lessonid);
        html_node.find(".opt-homework-url").attr('id', 'optid-homework-url'+lesson_info.lessonid);
        html_node.find(".opt-homework-url").parent().attr('id', 'optid-homework-url-parent'+lesson_info.lessonid);
        // add lesson quiz
        html_node.find(".opt-quiz-url").attr('id', 'optid-quiz-url'+lesson_info.lessonid);
        html_node.find(".opt-quiz-url").parent().attr('id', 'optid-quiz-url-parent'+lesson_info.lessonid);

        html_node.find(".lesson_time").text($(this).parents('td').siblings('.lesson_time').text());
        html_node.find(".tea_nick").text($(this).parents('td').siblings('.tea_nick').text());
        html_node.find(".stu_nick").text($(this).parents('td').siblings('.stu_nick').text());
        
        BootstrapDialog.show({
	        title: "上传本次课的课件或作业",
	        message :  html_node,
            onhide: function(dialogRef){
                $('.current_opt_lesson_record').removeClass('current_opt_lesson_record');
            },
	        buttons: [{
		        label: '返回',
		        action: function(dialog) {
                    $('.current_opt_lesson_record').removeClass('current_opt_lesson_record');
			        dialog.close();
		        }
	        }, {
		        label: '完成',
		        cssClass: 'btn-warning',
		        action: function(dialog) {
                    $('.current_opt_lesson_record').removeClass('current_opt_lesson_record');
			        dialog.close();
		        }
	        }]
        });

        var tt = setTimeout(function(){
            if (!check_lesson_status(lesson_info.lesson_status)) {
                html_node.find(".opt-teacher-url").attr("disabled", "disabled");     
                return;
            }
            custom_upload('optid-teacher-url'+lesson_info.lessonid, 'optid-teacher-url-parent'+lesson_info.lessonid,
                          setCompleteTeacher, lesson_info);  
            clearTimeout(tt);
        }, 1000);
        
        var ts = setTimeout(function(){
            if (!check_lesson_status(lesson_info.lesson_status)) {
                html_node.find(".opt-student-url").attr("disabled", "disabled");     
                return;
            }
            custom_upload('optid-student-url'+lesson_info.lessonid, 'optid-student-url-parent'+lesson_info.lessonid,
                          setCompleteStudent, lesson_info);  
            clearTimeout(ts);
        }, 1000);

        var tq = setTimeout(function(){
            if (!check_lesson_status(lesson_info.lesson_status)) {
                html_node.find(".opt-quiz-url").attr("disabled", "disabled");     
                return;
            }
            custom_upload('optid-quiz-url'+lesson_info.lessonid, 'optid-quiz-url-parent'+lesson_info.lessonid,
                          setCompleteQuiz, lesson_info);  
            clearTimeout(tq);
        }, 1000);

        var th = setTimeout(function(){
            if (!check_lesson_status(lesson_info.work_status)) {
                html_node.find(".opt-homework-url").attr("disabled", "disabled");     
                return;
            }
            custom_upload('optid-homework-url'+lesson_info.lessonid, 'optid-homework-url-parent'+lesson_info.lessonid,
                          setCompleteHomework, lesson_info);  
            clearTimeout(th);
        }, 1000);


    });

    $('.opt-download').on('click', function(){
        var html_node = $('<div></div>').html(dlg_get_html_by_class('dlg_download'));

        var lesson_info = new Object();
        lesson_info.lesson_status = $(this).parents('td').siblings('.lesson_status').find('.status').val();
        lesson_info.work_status   = $(this).parents('td').siblings('.homework_url').find('.status').val();

        lesson_info.tea_cw_url   = $(this).parents('td').siblings('.tea_cw_url').find('.file_url').val();
        lesson_info.stu_cw_url   = $(this).parents('td').siblings('.stu_cw_url').find('.file_url').val();
        lesson_info.homework_url = $(this).parents('td').siblings('.homework_url').find('.file_url').val();
        lesson_info.lesson_quiz  = $(this).parents('td').siblings('.lesson_quiz_url').find('.file_url').val();

        html_node.find(".lesson_time").text($(this).parents('td').siblings('.lesson_time').text());
        html_node.find(".tea_nick").text($(this).parents('td').siblings('.tea_nick').text());
        html_node.find(".stu_nick").text($(this).parents('td').siblings('.stu_nick').text());

        BootstrapDialog.show({
	        title: "下载本次课的课件或作业",
	        message : function(dialog) {
                html_node.find(".opt-teacher-url").on('click', function(){
                    if (!lesson_info.tea_cw_url) {
                        BootstrapDialog.alert("老师版课件未上传");
                        return;
                    }
                    custom_download(lesson_info.tea_cw_url);
                });

                html_node.find(".opt-student-url").on('click', function(){
                    if (!lesson_info.stu_cw_url) {
                        BootstrapDialog.alert("学生版课件未上传");
                        return;
                    }
                    custom_download(lesson_info.stu_cw_url);
                });

                html_node.find(".opt-homework-url").on('click', function(){
                    if (!lesson_info.homework_url) {
                        BootstrapDialog.alert("课后作业未上传");
                        return;
                    }
                    custom_download(lesson_info.homework_url);
                });

                html_node.find(".opt-quiz-url").on('click', function(){
                    if (!lesson_info.lesson_quiz) {
                        BootstrapDialog.alert("课堂测验未上传");
                        return;
                    }
                    custom_download(lesson_info.lesson_quiz);
                });
                
                return html_node;
            },
	        buttons: [{
		        label: '返回',
		        action: function(dialog) {
			        dialog.close();
		        }
	        }]
        });

    });

    $('.opt-score-star').on('click', function(){
        var lessonid = $(this).parent().data("lessonid");
        var html_node = $('<div></div>').html(dlg_get_html_by_class('dlg_score_star'));
        html_node.find(".effect").text($(this).parents('td').siblings('.teacher_effect').text());
        html_node.find(".quality").text($(this).parents('td').siblings('.teacher_quality').text());
        html_node.find(".interact").text($(this).parents('td').siblings('.teacher_interact').text());

        BootstrapDialog.show({
	        title: "更改本次课学生对老师的评分",
	        message : html_node ,
	        buttons: [{
		        label: '返回',
		        action: function(dialog) {
			        dialog.close();
		        }
	        }, {
		        label: '确认',
		        cssClass: 'btn-warning',
		        action: function(dialog) {
			        //get data from dlg
			        var new_effect   = html_node.find(".new_effect").val();
			        var new_quality  = html_node.find(".new_quality").val();
			        var new_interact = html_node.find(".new_interact").val();

                    $.ajax({
                        url: '/tea_manage/reset_lesson_comment',
                        type: 'POST',
                        data: {
                            'lessonid': lessonid, 'new_effect': new_effect, 'new_quality': new_quality, 'new_interact': new_interact
                        },
                        dataType: 'json',
                        success: function(result){
                            BootstrapDialog.alert(result['info']);
                        }
                    });
                    
			        dialog.close();
		        }
	        }]
        });

    });

    var custom_download = function(file_url) {
        $.ajax({
            url: '/tea_manage/get_pdf_download_url',
            type: 'GET',
            dataType: 'json',
            data: {'file_url': file_url},
            success: function(ret) {
                if (ret.ret != 0) {
                    BootstrapDialog.alert(ret.info);
                } else {
                    window.open('/pdf_viewer/?file='+ret.file, '_blank');
                }
            }
        });
    };

    var custom_upload = function(btn_id, containerid, complete_fun, lesson_info){
        var uploader = Qiniu.uploader({
		    runtimes: 'html5, flash, html4',
		    browse_button: btn_id , //choose files id
		    uptoken_url: '/upload/private_token',
		    domain: 'http://ebtest.qiniudn.com/',
		    container: containerid,
		    drop_element: containerid,
		    max_file_size: '30mb',
		    dragdrop: true,
		    flash_swf_url: '/js/qiniu/plupload/Moxie.swf',
		    chunk_size: '4mb',
		    unique_names: false,
		    save_key: false,
		    auto_start: true,
		    init: {
			    'FilesAdded': function(up, files) {
				    plupload.each(files, function(file) {
                        var progress = new FileProgress(file, 'process_info');
                        console.log('waiting...');
                    });
			    },
			    'BeforeUpload': function(up, file) {
				    console.log('before uplaod the file');
				    if (!check_type(file.type)) {
					    BootstrapDialog.alert('请上传PDF文件');
					    return;
                    }

			    },
			    'UploadProgress': function(up,file) {
				    var progress = new FileProgress(file, 'process_info');
                    progress.setProgress(file.percent + "%", up.total.bytesPerSec, btn_id);
				    console.log('upload progress');
			    },
			    'UploadComplete': function() {
                    $("#"+btn_id).siblings('div').remove();
				    console.log('success');
			    },
			    'FileUploaded' : function(up, file, info) {
				    console.log('Things below are from FileUploaded');
                    complete_fun(up, info, file, lesson_info);
			    },
			    'Error': function(up, err, errTip) {
				    console.log('Things below are from Error');
				    console.log(up);
				    console.log(err);
				    console.log(errTip);
			    },
			    'Key': function(up, file) {
				    var key = "";
				    //generate the key
                    var time = (new Date()).valueOf();
				    return $.md5(file.name) +time+'.pdf';
			    }
		    }
	    });
        
    };
    var setCompleteHomework = function(up, info, file, lesson_info) {

        var res = $.parseJSON(info);
        var url;
        if (res.url) {
        } else {
            $.ajax({
        	    url: '/homework_manage/set_homework_url',
        	    type: 'POST',
        	    data: {'homework_url': res.key, 'lessonid':lesson_info.lessonid},
			    dataType: 'json',
			    success: function(data) {
				    if (data['ret'] == 0) {
                        BootstrapDialog.alert("上传成功");
                        $('.current_opt_lesson_record').parents('td').siblings('.homework_url').children('span').text('已传');
				    } else {
                        BootstrapDialog.alert("上传失败");
				    }
			    }
            }); 
        }

    };
    var setCompleteQuiz = function(up, info, file, lesson_info) {
        // set_lesson_quiz
        var res = $.parseJSON(info);
        var url;
        if (res.url) {
        } else {
            $.ajax({
        	    url: '/lesson_manage/set_lesson_quiz',
        	    type: 'POST',
        	    data: {'lesson_quiz': res.key, 'lessonid':lesson_info.lessonid},
			    dataType: 'json',
			    success: function(data) {
				    if (data['ret'] == 0) {
                        BootstrapDialog.alert("上传成功");
                        $('.current_opt_lesson_record').parents('td').siblings('.lesson_quiz_url').children('span').text('已传');
				    } else {
                        BootstrapDialog.alert("上传失败");
				    }
			    }
            }); 
        }
    };

    var setCompleteStudent = function(up, info, file, lesson_info) {
        var res = $.parseJSON(info);
        var url;
        if (res.url) {
        } else {
            $.ajax({
        	    url: '/lesson_manage/set_stu_cw_url',
        	    type: 'POST',
        	    data: {'stu_cw_url': res.key, 'lessonid':lesson_info.lessonid},
			    dataType: 'json',
			    success: function(data) {
				    if (data['ret'] == 0) {
                        BootstrapDialog.alert("上传成功");
                        $('.current_opt_lesson_record').parents('td').siblings('.stu_cw_url').children('span').text('已传');
				    } else {
                        BootstrapDialog.alert("上传失败");
				    }
			    }
            }); 
        }
    };

    var setCompleteTeacher = function(up, info, file, lesson_info) {
        var res = $.parseJSON(info);
        var url;
        if (res.url) {
        } else {
            $.ajax({
        	    url: '/lesson_manage/set_tea_cw_url',
        	    type: 'POST',
        	    data: {'tea_cw_url': res.key, 'lessonid':lesson_info.lessonid},
			    dataType: 'json',
			    success: function(data) {
				    if (data['ret'] == 0) {
                        BootstrapDialog.alert("上传成功");
                        $('.current_opt_lesson_record').parents('td').siblings('.tea_cw_url').children('span').text('已传');
				    } else {
                        BootstrapDialog.alert("上传失败");
				    }
			    }
            }); 
        }

    };

    function check_type(file_type)
    {
	    return file_type == 'application/pdf' ? true : false;
    }

    function check_work_status(work_status)
    {
        return work_status < 2 ? true: false;
    }

    function check_lesson_status(lesson_status)
    {
        // return lesson_status < 2 ? true : false;
        return true;
    }

    function FileProgress(file, targetID)
    {
	    this.fileProgressID = file.id;
	    this.file = file;
	    var fileSize = plupload.formatSize(file.size).toUpperCase();
	    this.fileProgressWrapper = $('#' + this.fileProgressID); 

	    if (!this.fileProgressWrapper.length) {
	 	    $('#process_info').find('.process_in .pro_cover').css('width', 0 + '%');

	    }

	    this.setTimer(null);
    }

    FileProgress.prototype.setTimer = function(timer) {
        this.fileProgressWrapper.FP_TIMER = timer;
    };

    FileProgress.prototype.getTimer = function(timer) {
        return this.fileProgressWrapper.FP_TIMER || null;
    };

    FileProgress.prototype.setProgress = function(percentage, speed, upload_btn) {

        var file = this.file;
        var uploaded = file.loaded;

        var size = plupload.formatSize(uploaded).toUpperCase();
        var formatSpeed = plupload.formatSize(speed).toUpperCase();

        percentage = parseInt(percentage, 10);
        if (file.status !== plupload.DONE && percentage === 100) {
            percentage = 99;
        }

        $('#'+upload_btn).parents('.row').siblings().find('.upload_process_info').css('width', percentage + '%');
    };

    $(".opt-small-class" ).each(function( ){
        var lesson_type= $(this).get_opt_data("lesson_type");
        var courseid = $(this).get_opt_data("courseid");
        if (lesson_type ==3001){
            wopen( "/small_class/index?courseid="+courseid );
        }else{
            $(this).hide();
        }
        //alert(lesson_type);
    
    });

    $(".opt-play").click();


});
